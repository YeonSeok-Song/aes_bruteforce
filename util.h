//////////////////////////////////////////////////////////////////////////////////////////
// ��� �����
/////////////////////////////////////////////////////////////////////////////////////////
#define MASK01 0x80 // �ֻ��� �� ��Ʈ ����ũ
//////////////////////////////////////////////////////////////////////////////////////////
// �Լ����� �����
/////////////////////////////////////////////////////////////////////////////////////////
// [ ] u1byte in_blk[16], out_blk[16]: �Է� �ٸ� ��Ʈ ���� ���� �� �Է�
// [ ] ���� �� �Է� ���� ����� ��Ʈ ������ ����ϰ� �� �Է��� �ٸ� ��Ʈ ���� ��� ,
void printfDiff( u1byte in_blk[16], u1byte out_blk[16] ) ;
// [ ] u1byte in[16]: �Է� ��Ʈ ������ ����� ��
// [ ] (4 , 32 ) ���� �Է� ���� ��Ʈ ������ ��� ��Ʈ���� �� ĭ ��� ��Ʈ���� �� �� ���
void printfBit( u1byte in[16] ) ;
// [ ] u1byte in[16]: 1 �Է� ��Ʈ �� �� ������ �� �Է�
// [ ] int : 1 ��ȯ ��Ʈ �� �� ����
// [ ] 1 ���� �Է� ������ ��Ʈ ���� �� ������ ���
int numOfOne( u1byte in[16] ) ;
// compare() �Լ�

    // [�Է�]       array1[], array2[]: ���� �� �迭

    // [return] 0: �ٸ�

    // 1: ����

    // [����] �� �迭�� ���� �������� ��

int compare(u1byte array1[16], u1byte array2[16]) ;
// printfHex() �Լ�

    // [�Է�] in[]: ��Ʈ ������ ����� �迭

    // [����] �Է� �迭�� ���� ������ ������ ���

void printfHex(u1byte in[16]) ;

